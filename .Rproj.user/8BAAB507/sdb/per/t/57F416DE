{
    "contents" : "###############################################################################\n## Parse the WICHE Dataset and build Tableau Data Extract\n## March 2014\n## @brocktibert\n## #emsci\n## \n## Copyright (c) 2011, under the Simplified BSD License.  \n## For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php\n## All rights reserved.\n###############################################################################\n\n## load the packages\nlibrary(RODBC) #works on windows\nlibrary(reshape2)\nlibrary(stringr)\nlibrary(plyr)\nlibrary(ggplot2)\n\n## ensure that we have a directory to store the raw data\nif (!file.exists(\"raw\")) dir.create(\"raw\")\nif (!file.exists(\"figs\")) dir.create(\"figs\")\n\n## download the dataset into your working directory\n## use mode option below so the file can open in R, error w/o it\nWICHE_DATA = \"http://wiche.edu/info/knocking-8th/tables/allProjections.xlsx\"\ndownload.file(url=WICHE_DATA, destfile=\"raw/wiche.xlsx\", mode=\"wb\")\n\n\n## use the RODBC library (Windows) to query and get the data\nxl = odbcConnectExcel2007(\"raw/wiche.xlsx\")\n\n\n## now we can think of our XL workbook as a database. Tabs = Database Tables\nsqlTables(xl)\n\n\n## store the metadata as a dataframe\nmeta = as.data.frame(sqlTables(xl))\n\n\n## how cool is it that R has the State names and Abbreviations preloaded?\n?state.name\n(states = state.name)\nlength(states)\nstates = c(states, \"District of Columbia\")\n\n\n\n## use a for loop -- not ideal but easy to read and debug\nwiche = data.frame(stringsAsFactors=FALSE)\nfor (state in states) {\n raw = sqlFetch(xl, state, stringsAsFactors=FALSE)\n ## bc there is a structure to each sheet, we can reference each column by index\n ## no way is this ideal, but quick when data doesnt change\n ROWS = 9:40\n COLS = c(1, 3:10)\n ## create a flag for actual/projected -- hard coded from looking at Excel file\n status = c(rep(\"actual\", 13), rep(\"projected\", 19))\n ## keep the data\n df = raw[ROWS, COLS]\n colnames(df) = c('year',\n                  'pub_amind',\n                  'pub_asian',\n                  'pub_black',\n                  'pub_hisp',\n                  'pub_white',\n                  'pub_total',\n                  'np_total',\n                  'total')\n ## remove the commas -- using a for loop not ideal, but intuitive\n for (i in 2:ncol(df)) {\n  df[,i] = as.numeric(gsub(\",\",\"\", df[,i]))\n }\n df$state = state\n df$status = status\n ## bind onto the master data frame\n wiche = rbind.fill(wiche, df)\n ## status\n cat(\"finished \", state, \"\\n\")\n}\n\n\n## lets look at the total over time\ngrad_tot = ddply(wiche, .(year), summarise, \n                 total = sum(total, na.rm=TRUE))\ng = ggplot(grad_tot, aes(x=year, y=total, group=1))\ng = g + geom_line(aes(colour=status)) + scale_colour_manual(values=c(\"#F8A31B\", \"#556670\"))\ng = g + xlab(\"Academic Year\") + ylab(\"# Grads\")\ng = g + theme_bw() \ng = g + theme(axis.text.x = element_text(angle = 90, hjust = 1),\n              panel.grid.major.x = element_blank(),\n              panel.border = element_blank())\ng + ggtitle(\"Wiche Actual/Projected High School Graduates\")\nggsave(file = \"figs/Total-HS-Grads.jpg\")\n\n\n## save the data for tableau\nwrite.table(wiche, file=\"wiche-dataset.csv\", sep=\",\", row.names=F)\n",
    "created" : 1395526738406.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4108614718",
    "id" : "57F416DE",
    "lastKnownWriteTime" : 1395594475,
    "path" : "~/GitHub/em-nerdery/wiche-r-tableau/parse-wiche.R",
    "project_path" : "parse-wiche.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}